name: Secret Repository Workflow

on: 
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:  # Allows manual trigger from GitHub Actions UI

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Environment (Linux & Mac)
        if: runner.os != 'Windows'
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > .env
          echo "SEARCH_API_KEY=${{ secrets.SEARCH_API_KEY }}" >> .env
          echo "SEARCH_ENGINE_ID=${{ secrets.SEARCH_ENGINE_ID }}" >> .env
        shell: bash

      - name: Set Up Environment (Windows)
        if: runner.os == 'Windows'
        run: |
          echo API_KEY=${{ secrets.API_KEY }} > .env
          echo SEARCH_API_KEY=${{ secrets.SEARCH_API_KEY }} >> .env
          echo SEARCH_ENGINE_ID=${{ secrets.SEARCH_ENGINE_ID }} >> .env
        shell: pwsh

      - name: Safe Environment Check (Avoid Printing Secrets)
        run: |
          echo "‚úÖ Environment variables are set correctly!"
        shell: bash

      - name: Run Script
        run: |
          echo "üöÄ Running script..."
          if [ -f "run.sh" ]; then
            chmod +x run.sh && ./run.sh
          else
            echo "‚ùå Script not found!"
            exit 1
          fi
        shell: bash
        if: runner.os != 'Windows'

      - name: Run Script (Windows)
        run: |
          if (Test-Path "run.ps1") {
            ./run.ps1
          } else {
            Write-Error "‚ùå Script not found!"
            exit 1
          }
        shell: pwsh
        if: runner.os == 'Windows'